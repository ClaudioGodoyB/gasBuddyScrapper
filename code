import requests
import pandas as pd
import json
import warnings 

warnings.filterwarnings("ignore")
df = pd.DataFrame(columns=['zipcode', 'LocationCode',
                  'Brand', 'Address', 'GasType', 'Price'])


def getData(zipcode):

    zipcode = str(zipcode)
    url = "https://www.gasbuddy.com/graphql"

    payload = "{\"operationName\":\"LocationBySearchTerm\",\"variables\":{\"fuel\":1,\"search\":\"" + zipcode + "\"},\"query\":\"query LocationBySearchTerm($brandId: Int, $cursor: String, $fuel: Int, $lat: Float, $lng: Float, $maxAge: Int, $search: String) {\\n  locationBySearchTerm(lat: $lat, lng: $lng, search: $search) {\\n    countryCode\\n    displayName\\n    latitude\\n    longitude\\n    regionCode\\n    stations(brandId: $brandId, cursor: $cursor, fuel: $fuel, maxAge: $maxAge) {\\n      count\\n      cursor {\\n        next\\n        __typename\\n      }\\n      results {\\n        address {\\n          country\\n          line_1\\n          line_2\\n          locality\\n          postal_code\\n          region\\n          __typename\\n        }\\n        badges {\\n          badgeId\\n          callToAction\\n          campaignId\\n          clickTrackingUrl\\n          description\\n          detailsImageUrl\\n          detailsImpressionTrackingUrls\\n          imageUrl\\n          impressionTrackingUrls\\n          targetUrl\\n          title\\n          __typename\\n        }\\n        brandings {\\n          brand_id\\n          branding_type\\n          __typename\\n        }\\n        brands {\\n          brand_id\\n          image_url\\n          name\\n          __typename\\n        }\\n        emergency_status {\\n          has_diesel {\\n            nick_name\\n            report_status\\n            update_date\\n            __typename\\n          }\\n          has_gas {\\n            nick_name\\n            report_status\\n            update_date\\n            __typename\\n          }\\n          has_power {\\n            nick_name\\n            report_status\\n            update_date\\n            __typename\\n          }\\n          __typename\\n        }\\n        enterprise\\n        fuels\\n        id\\n        name\\n        offers {\\n          discounts {\\n            grades\\n            pwgb_discount\\n            __typename\\n          }\\n          types\\n          __typename\\n        }\\n        pay_status {\\n          is_pay_available\\n          __typename\\n        }\\n        prices {\\n          cash {\\n            nickname\\n            posted_time\\n            price\\n            __typename\\n          }\\n          credit {\\n            nickname\\n            posted_time\\n            price\\n            __typename\\n          }\\n          discount\\n          fuel_product\\n          __typename\\n        }\\n        ratings_count\\n        star_rating\\n        __typename\\n      }\\n      __typename\\n    }\\n    trends {\\n      areaName\\n      today\\n      todayLow\\n      trend\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}"
    headers = {
        'authority': 'www.gasbuddy.com',
        'method': 'POST',
        'path': '/graphql',
        'scheme': 'https',
        'accept': '*/*',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9',
        'content-length': '2581',
        'content-type': 'application/json',
        'cookie': '_loc_ne=false; _loc_dat=false; _loc_iu=%2271eeb99c-5258-48c8-9fca-07e1ede56275%22; _loc_ids={}; _loc_pa=1643929485; _loc_cd=[]; _gcl_au=1.1.2072749179.1647905117; _fbp=fb.1.1647905119536.1121450336; __qca=P0-115022625-1647905119981; _ga=GA1.2.217579713.1647905117; __gads=ID=3f40ae197d1d634c:T=1647905124:S=ALNI_MYkDFfJf-wvG8y592n_57DRDbB0KA; _ga_HK0006BF8Q=GS1.1.1648070598.2.0.1648070598.0; g_state={"i_p":1650294747767,"i_l":2}; _loc_csu=%22d4242412-a404-4cc3-bb25-0b31fcfe2c3b%22; _loc_cst=1650345478; _loc_csi=5; _gid=GA1.2.611446043.1650345479; _gat_UA-3201164-1=1; cto_bundle=wy69k19XeGt4QlprR0xyUkVlRHZGR0lkaW9GbnpBS1VLa2dHRlJTNlVHOENuNFk1aVltRlBtcnlXeXBnRG1GeWhtbXE1bTUzc2FXRDdvdmVycW51OTJUOUt0U3BsS0FpM1FnTXZXZlVSWnBxUmxoZWNsY0FOcGtLOElOVUolMkZ5UnY1a0Jsb25UNzNJOG92d2R4NCUyRlVybUlWcUNRJTNEJTNE; _loc_fl=[%22Home%22%2C%22Search_List%22]; _loc_ct=1650345495.209; _loc_csq=54; __gpi=UID=0000048eac537408:T=1650208352:RT=1650345494:S=ALNI_MajfZR73cYImTpuB_0kGOEGfyuWDg',
        'origin': 'https://www.gasbuddy.com',
        'referer': 'https://www.gasbuddy.com/home?search=33186&fuel=1&method=all',
        'sec-ch-ua': '"Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36'
    }

    response = requests.request("POST", url, headers=headers, data=payload)

    data = response.json()
    return data

zc_list = [33012,33186,33015,33157,33033,33142,33125,33177,33165,33161,33018,33175,33196,33178,33032,33176,33016,33126,33029,33193,33155,33147,33169,33162,33010,33179,33172,33134,33055,33014,33135,33160,33141,33139,33183,33056,33030,33133,33156,33013,33127,33180,33173,33174,33145,33144,33143,33130,33150,33185,33054,33138,33168,33189,33034,33166,33167,33184,33140,33181,33187,33131,33132,33137,33136,33146,33154,33182,33129,33170,33149,33037,33190,33194,33035,33128,33031,33158,33122,33199,33039,33109,33002,33011,33017,33090,33093,33092,33101,33107,33102,33110,33112,33111,33116,33114,33121,33119,33124,33148,33152,33151,33153,33159,33164,33163,33188,33192,33197,33233,33231,33238,33234,33242,33239,33245,33243,33255,33247,33257,33256,33265,33261,33269,33266,33283,33280,33299,33296,33106,33191,33206,33198,33195,33222]

for i in zc_list:
    data = getData(i)

    #strip principal chunk
    found_stations = data['data']['locationBySearchTerm']['stations']['count']
    # structured data
    results = data['data']['locationBySearchTerm']['stations']['results']
    for i in results:
        price_list = i['prices']
        brand = i['name']
        id = i['id']
        address = i['address']['line_1']
        zipcode = i['address']['postal_code']
        for e in price_list:
            fuelType = e['fuel_product']
            print(brand)
            print(fuelType)
            price = e['credit']['price']
            print(price)
            #print("INSERT INTO PRICES VALUES (" + str(id) +  "', '" + ', 'Norway');")
            df = df.append({'zipcode': zipcode, 'LocationCode': id, 'Brand': brand,
                            'Address': address, 'GasType': fuelType, 'Price': price}, ignore_index=True)

print(df)
df.to_excel('resultados.xlsx')
